import streamlit as st
import os
import sys

# Add the parent directory to sys.path to import from parent modules
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def get_text(key):
    """–ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É"""
    if 'language' not in st.session_state:
        st.session_state.language = 'ru'
        
    texts = {
        'title': {
            'en': 'Download Desktop Application',
            'ru': '–°–∫–∞—á–∞—Ç—å Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
        },
        'description': {
            'en': 'Download Kirlian Platform for your operating system',
            'ru': '–°–∫–∞—á–∞–π—Ç–µ Kirlian Platform –¥–ª—è –≤–∞—à–µ–π –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã'
        },
        'requirements': {
            'en': 'System Requirements',
            'ru': '–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è'
        },
        'windows_title': {
            'en': 'Windows Version',
            'ru': '–í–µ—Ä—Å–∏—è –¥–ª—è Windows'
        },
        'mac_title': {
            'en': 'Mac Version',
            'ru': '–í–µ—Ä—Å–∏—è –¥–ª—è Mac'
        },
        'windows_requirements': {
            'en': '‚Ä¢ Windows 10 or later\n‚Ä¢ 4 GB RAM\n‚Ä¢ 500 MB free disk space\n‚Ä¢ Python 3.8+ (included in installer)',
            'ru': '‚Ä¢ Windows 10 –∏–ª–∏ –Ω–æ–≤–µ–µ\n‚Ä¢ 4 –ì–ë –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏\n‚Ä¢ 500 –ú–ë —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞\n‚Ä¢ Python 3.8+ (–≤–∫–ª—é—á–µ–Ω –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫)'
        },
        'mac_requirements': {
            'en': '‚Ä¢ macOS 10.14 or later\n‚Ä¢ 4 GB RAM\n‚Ä¢ 500 MB free disk space\n‚Ä¢ Intel or Apple Silicon processor',
            'ru': '‚Ä¢ macOS 10.14 –∏–ª–∏ –Ω–æ–≤–µ–µ\n‚Ä¢ 4 –ì–ë –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏\n‚Ä¢ 500 –ú–ë —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞\n‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä Intel –∏–ª–∏ Apple Silicon'
        },
        'download_button': {
            'en': 'Download',
            'ru': '–°–∫–∞—á–∞—Ç—å'
        },
        'version_info': {
            'en': 'Version 1.0.0 ‚Ä¢ Released August 2025',
            'ru': '–í–µ—Ä—Å–∏—è 1.0.0 ‚Ä¢ –í—ã–ø—É—â–µ–Ω–æ –≤ –∞–≤–≥—É—Å—Ç–µ 2025'
        },
        'installation_guide': {
            'en': 'Installation Guide',
            'ru': '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ'
        },
        'windows_install': {
            'en': '1. Download the installer\n2. Run the .exe file\n3. Follow the installation wizard\n4. Launch from Start Menu',
            'ru': '1. –°–∫–∞—á–∞–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫\n2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ .exe —Ñ–∞–π–ª\n3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –º–∞—Å—Ç–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏\n4. –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –∏–∑ –º–µ–Ω—é –ü—É—Å–∫'
        },
        'mac_install': {
            'en': '1. Download the .dmg file\n2. Open the disk image\n3. Drag the app to Applications folder\n4. Launch from Applications',
            'ru': '1. –°–∫–∞—á–∞–π—Ç–µ .dmg —Ñ–∞–π–ª\n2. –û—Ç–∫—Ä–æ–π—Ç–µ –æ–±—Ä–∞–∑ –¥–∏—Å–∫–∞\n3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É –ü—Ä–æ–≥—Ä–∞–º–º—ã\n4. –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –∏–∑ –ø–∞–ø–∫–∏ –ü—Ä–æ–≥—Ä–∞–º–º—ã'
        },
        'build_instructions': {
            'en': 'Build Instructions for Developers',
            'ru': '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å–±–æ—Ä–∫–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤'
        },
        'source_code': {
            'en': 'Source Code',
            'ru': '–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥'
        }
    }
    
    return texts.get(key, {}).get(st.session_state.language, texts.get(key, {}).get('ru', key))

def display_download_page():
    """Main function to display the download page"""
    st.title(get_text('title'))
    st.markdown(get_text('description'))
    
    # Version info
    st.info(get_text('version_info'))
    
    # Download section
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("ü™ü " + get_text('windows_title'))
        st.markdown(get_text('windows_requirements'))
        
        # –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Windows
        portable_path = "releases/portable/"
        if os.path.exists(portable_path):
            # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏
            st.success("‚úÖ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –≥–æ—Ç–æ–≤–∞!" if st.session_state.language == 'ru' else "‚úÖ Portable version ready!")
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π zip —Ñ–∞–π–ª –¥–ª—è Windows
            import zipfile
            import tempfile
            
            with tempfile.NamedTemporaryFile(delete=False, suffix='.zip') as tmp_file:
                with zipfile.ZipFile(tmp_file.name, 'w') as zipf:
                    for root, dirs, files in os.walk(portable_path):
                        for file in files:
                            file_path = os.path.join(root, file)
                            arc_name = os.path.relpath(file_path, portable_path)
                            zipf.write(file_path, arc_name)
                
                with open(tmp_file.name, 'rb') as f:
                    st.download_button(
                        label=f"üì• {get_text('download_button')} –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è",
                        data=f.read(),
                        file_name="Kirlian_Platform_Windows_Portable.zip",
                        mime="application/zip",
                        type="primary"
                    )
        else:
            st.warning("–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" if st.session_state.language == 'ru' else "Portable version not found")
            
        st.info("""
        **–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è:**
        ‚Ä¢ –ù–µ —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        ‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
        ‚Ä¢ –ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç Python 3.8+
        """ if st.session_state.language == 'ru' else """
        **Portable version:**
        ‚Ä¢ No installation required
        ‚Ä¢ Works immediately after extraction
        ‚Ä¢ Full functionality
        ‚Ä¢ Requires Python 3.8+
        """)
    
    with col2:
        st.subheader("üçé " + get_text('mac_title'))
        st.markdown(get_text('mac_requirements'))
        
        # –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Mac  
        portable_path = "releases/portable/"
        if os.path.exists(portable_path):
            st.success("‚úÖ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –≥–æ—Ç–æ–≤–∞!" if st.session_state.language == 'ru' else "‚úÖ Portable version ready!")
            
            # –°–æ–∑–¥–∞–µ–º tar.gz –∞—Ä—Ö–∏–≤ –¥–ª—è Mac/Linux
            import tarfile
            import tempfile
            
            with tempfile.NamedTemporaryFile(delete=False, suffix='.tar.gz') as tmp_file:
                with tarfile.open(tmp_file.name, 'w:gz') as tar:
                    tar.add(portable_path, arcname='Kirlian_Platform')
                
                with open(tmp_file.name, 'rb') as f:
                    st.download_button(
                        label=f"üì• {get_text('download_button')} –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è",
                        data=f.read(),
                        file_name="Kirlian_Platform_Mac_Portable.tar.gz",
                        mime="application/gzip",
                        type="primary"
                    )
        else:
            st.warning("–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" if st.session_state.language == 'ru' else "Portable version not found")
            
        st.info("""
        **–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è:**
        ‚Ä¢ –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤
        ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ start_kirlian_platform.sh
        ‚Ä¢ –ò–ª–∏ python3 Kirlian_Platform_Launcher.py
        ‚Ä¢ –¢—Ä–µ–±—É–µ—Ç Python 3.8+
        """ if st.session_state.language == 'ru' else """
        **Portable version:**
        ‚Ä¢ Extract the archive
        ‚Ä¢ Run start_kirlian_platform.sh
        ‚Ä¢ Or python3 Kirlian_Platform_Launcher.py
        ‚Ä¢ Requires Python 3.8+
        """)
    
    # Installation guides
    st.markdown("---")
    st.header(get_text('installation_guide'))
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.subheader("Windows")
        st.markdown(get_text('windows_install'))
    
    with col2:
        st.subheader("Mac")
        st.markdown(get_text('mac_install'))
    
    # Developer section
    st.markdown("---")
    st.header(get_text('build_instructions'))
    
    st.markdown("""
    ### –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏
    - Node.js 16+
    - Python 3.8+
    - Git
    
    ### –ö–æ–º–∞–Ω–¥—ã —Å–±–æ—Ä–∫–∏
    ```bash
    # –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    git clone <repository-url>
    cd kirlian-platform
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
    pip install -r requirements.txt
    
    # –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    cd desktop-app
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Node.js
    npm install
    
    # –°–æ–±–µ—Ä–∏—Ç–µ –¥–ª—è Windows
    npm run build-win
    
    # –°–æ–±–µ—Ä–∏—Ç–µ –¥–ª—è Mac
    npm run build-mac
    
    # –°–æ–±–µ—Ä–∏—Ç–µ –¥–ª—è –æ–±–µ–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
    npm run dist
    ```
    """)
    
    # Additional information
    st.markdown("---")
    st.subheader("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    
    info_col1, info_col2 = st.columns(2)
    
    with info_col1:
        st.markdown("""
        **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:**
        - –ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
        - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Streamlit —Å–µ—Ä–≤–µ—Ä
        - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        - –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        """)
    
    with info_col2:
        st.markdown("""
        **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:**
        - Email: support@kirlian-platform.com
        - –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
        - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: /help
        - GitHub Issues –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        """)

# Display the page
if __name__ == "__main__":
    display_download_page()
else:
    display_download_page()